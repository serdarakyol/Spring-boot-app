name: CI

on:
  pull_request:
  push:
    branches: [develop, main]

concurrency:
  group: ci-${{ github.ref }}-group
  cancel-in-progress: true

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
      - name: Setup DB
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '15.1'
          postgresql db: school_management
          postgresql user: learning
          postgresql password: sa123456

  default:
    needs: setup-db
    runs-on: ubuntu-latest
    steps:
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run unit tests
        run: mvn test
      - name: Build with Maven
        run: mvn clean install -DskipTests
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      - name: Build Jar file
        run: ./project-dev build-jar
      - name: Save Jar file
        uses: actions/upload-artifact@v3
        with:
          name: demo-0.0.1-SNAPSHOT
          path: target/demo-0.0.1-SNAPSHOT.jar
          retention-days: 1
      - name: Generate coverage report
        run: ./project-dev test-coverage-report
      - name: Save coverage report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage-report
          path: dist/unit-test-coverage.tar.gz
          retention-days: 1
      - name: Run API
        run: mvn spring-boot:run --quiet &
      - name: Run the performance test
        run: ./project-dev performance-test
      - name: Generate report file
        run: ./project-dev prepare-report
      - name: Save generated report file
        uses: actions/upload-artifact@v3
        with:
          name: report-file
          path: dist/demo-report.tar.gz
          retention-days: 1

  run-unit-tests:
  needs: build-maven
    runs-on: ubuntu-latest
    steps:
      - name: Setup DB
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '15.1'
          postgresql db: school_management
          postgresql user: learning
          postgresql password: sa123456
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run unit tests
        run: mvn test

  build-maven:
    runs-on: ubuntu-latest
    steps:
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean install -DskipTests

  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: ./project-dev build-jar
      - name: Save Jar file
        uses: actions/upload-artifact@v3
        with:
          name: demo-0.0.1-SNAPSHOT
          path: target/demo-0.0.1-SNAPSHOT.jar
          retention-days: 1
  
  generate-coverage-report:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup DB
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '15.1'
          postgresql db: school_management
          postgresql user: learning
          postgresql password: sa123456
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: ./project-dev test-coverage-report
      - name: Save coverage report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage-report
          path: dist/unit-test-coverage.tar.gz
          retention-days: 1

  performace-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run API
        run: mvn spring-boot:run --quiet &
      - run: ./project-dev performance-test

  generate-report-file:
    runs-on: ubuntu-latest
    needs: performace-testing
    steps:
      - name: Pull repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: ./project-dev prepare-report
      - name: Save generated report file
        uses: actions/upload-artifact@v3
        with:
          name: report-file
          path: dist/demo-report.tar.gz
          retention-days: 1
